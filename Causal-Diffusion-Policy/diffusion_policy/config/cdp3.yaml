defaults:
  - task: adroit_hammer

name: train_cdp3

task_name: ${task.name}
shape_meta: ${task.shape_meta}
exp_name: "debug"

horizon: 40
n_obs_steps: 32
n_action_steps: 8
n_latency_steps: 0
dataset_obs_steps: ${n_obs_steps}
keypoint_visible_rate: 1.0
obs_as_cond: True

policy:
  _target_: diffusion_policy.policy.cdp3.DP
  shape_meta: ${shape_meta}
  noise_scheduler:
    _target_: diffusion_policy.policy.schedulers.DDPMTEDiScheduler
    num_train_timesteps: 100
    beta_start: 0.0001
    beta_end: 0.02
    beta_schedule: squaredcos_cap_v2
    variance_type: fixed_small # Yilun's paper uses fixed_small_log instead, but easy to cause Nan
    clip_sample: True
    prediction_type: sample
    # prediction_type: epsilon
  horizon: ${horizon}
  n_action_steps: ${eval:'${n_action_steps}+${n_latency_steps}'}
  n_obs_steps: ${n_obs_steps}
  num_inference_steps: 100
  n_layer: 8
  n_head: 4
  n_emb: 256
  p_drop_emb: 0.0
  p_drop_attn: 0.3
  obs_as_cond: ${obs_as_cond}
  use_point_crop: true
  condition_type: cross_attention
  encoder_output_dim: 64
  crop_shape:
  - 80
  - 80
  use_pc_color: false
  pointnet_type: "pointnet"
  pointcloud_encoder_cfg:
    in_channels: 3
    out_channels: ${policy.encoder_output_dim}
    use_layernorm: true
    final_norm: layernorm # layernorm, none
    normal_channel: false


  temporally_constant_weight: 0.1
  temporally_increasing_weight: 0.0
  temporally_random_weights: 0.0
  chunk_wise_weight: 0.9
  buffer_init: "zero"
  with_causal: True
  causal_condition_noise_weight: 50.0
  training_mode_thres: 0.2

ema:
  _target_: diffusion_policy.model.diffusion.ema_model.EMAModel
  update_after_step: 0
  inv_gamma: 1.0
  power: 0.75
  min_value: 0.0
  max_value: 0.9999

dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: True
  pin_memory: True
  persistent_workers: False

val_dataloader:
  batch_size: 64
  num_workers: 8
  shuffle: False
  pin_memory: True
  persistent_workers: False

optimizer:
  transformer_weight_decay: 1.0e-3
  obs_encoder_weight_decay: 1.0e-6
  learning_rate: 1.0e-4
  betas: [0.9, 0.95]

training:
  device: "cuda:0"
  seed: 44
  debug: False
  resume: True
  lr_scheduler: cosine
  lr_warmup_steps: 1000
  num_epochs: 3000
  gradient_accumulate_every: 1
  use_ema: True
  rollout_every: 50
  checkpoint_every: 50
  val_every: 1
  sample_every: 5
  max_train_steps: null
  max_val_steps: null
  tqdm_interval_sec: 1.0

logging:
  group: ${exp_name}
  id: null
  mode: online
  name: ${training.seed}
  project: dp3_transformer_causal
  resume: true
  tags:
  - dp3_transformer_causal

checkpoint:
  save_ckpt: False # if True, save checkpoint every checkpoint_every
  topk:
    monitor_key: test_mean_score
    mode: max
    k: 5
    format_str: 'epoch={epoch:04d}-test_mean_score={test_mean_score:.3f}.ckpt'
  save_last_ckpt: True # this only saves when save_ckpt is True
  save_last_snapshot: False

multi_run:
  run_dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  wandb_name_base: ${now:%Y.%m.%d-%H.%M.%S}_${name}_${task_name}

hydra:
  job:
    override_dirname: ${name}
  run:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
  sweep:
    dir: data/outputs/${now:%Y.%m.%d}/${now:%H.%M.%S}_${name}_${task_name}
    subdir: ${hydra.job.num}
